<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="SummerTrainingDBDataSet" targetNamespace="http://tempuri.org/SummerTrainingDBDataSet.xsd" xmlns:mstns="http://tempuri.org/SummerTrainingDBDataSet.xsd" xmlns="http://tempuri.org/SummerTrainingDBDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="SummerTrainingDBConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="SummerTrainingDBConnectionString (Settings)" PropertyReference="ApplicationSettings.summer_trining.Properties.Settings.GlobalReference.Default.SummerTrainingDBConnectionString" Provider="System.Data.OleDb" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="DepartmentInformationTableAdapter" GeneratorDataComponentClassName="DepartmentInformationTableAdapter" Name="DepartmentInformation" UserDataComponentName="DepartmentInformationTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="SummerTrainingDBConnectionString (Settings)" DbObjectName="DepartmentInformation" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM `DepartmentInformation` WHERE ((`DepartmentID` = ?) AND ((? = 1 AND `DepartmentName` IS NULL) OR (`DepartmentName` = ?)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_DepartmentID" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="DepartmentID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_DepartmentName" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="DepartmentName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_DepartmentName" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="DepartmentName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO `DepartmentInformation` (`DepartmentID`, `DepartmentName`) VALUES (?, ?)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="DepartmentID" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="DepartmentID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="DepartmentName" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="DepartmentName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT DepartmentID, DepartmentName FROM DepartmentInformation</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE `DepartmentInformation` SET `DepartmentID` = ?, `DepartmentName` = ? WHERE ((`DepartmentID` = ?) AND ((? = 1 AND `DepartmentName` IS NULL) OR (`DepartmentName` = ?)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="DepartmentID" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="DepartmentID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="DepartmentName" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="DepartmentName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_DepartmentID" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="DepartmentID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_DepartmentName" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="DepartmentName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_DepartmentName" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="DepartmentName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="DepartmentID" DataSetColumn="DepartmentID" />
              <Mapping SourceColumn="DepartmentName" DataSetColumn="DepartmentName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ExcusesTableAdapter" GeneratorDataComponentClassName="ExcusesTableAdapter" Name="Excuses" UserDataComponentName="ExcusesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="SummerTrainingDBConnectionString (Settings)" DbObjectName="Excuses" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM `Excuses` WHERE ((`ExcuseID` = ?) AND ((? = 1 AND `ExcuseDescription` IS NULL) OR (`ExcuseDescription` = ?)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_ExcuseID" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="ExcuseID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_ExcuseDescription" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="ExcuseDescription" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_ExcuseDescription" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="ExcuseDescription" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO `Excuses` (`ExcuseDescription`) VALUES (?)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="ExcuseDescription" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="ExcuseDescription" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ExcuseID, ExcuseDescription FROM Excuses</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE `Excuses` SET `ExcuseDescription` = ? WHERE ((`ExcuseID` = ?) AND ((? = 1 AND `ExcuseDescription` IS NULL) OR (`ExcuseDescription` = ?)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="ExcuseDescription" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="ExcuseDescription" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_ExcuseID" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="ExcuseID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_ExcuseDescription" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="ExcuseDescription" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_ExcuseDescription" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="ExcuseDescription" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ExcuseID" DataSetColumn="ExcuseID" />
              <Mapping SourceColumn="ExcuseDescription" DataSetColumn="ExcuseDescription" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="StudentExcusesTableAdapter" GeneratorDataComponentClassName="StudentExcusesTableAdapter" Name="StudentExcuses" UserDataComponentName="StudentExcusesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="SummerTrainingDBConnectionString (Settings)" DbObjectName="StudentExcuses" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM `StudentExcuses` WHERE ((`StudentExcuseID` = ?) AND ((? = 1 AND `StudentID` IS NULL) OR (`StudentID` = ?)) AND ((? = 1 AND `ExcuseID` IS NULL) OR (`ExcuseID` = ?)) AND ((? = 1 AND `ExcuseDate` IS NULL) OR (`ExcuseDate` = ?)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_StudentExcuseID" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="StudentExcuseID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_StudentID" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="StudentID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_StudentID" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="StudentID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_ExcuseID" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="ExcuseID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_ExcuseID" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="ExcuseID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_ExcuseDate" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="ExcuseDate" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="Original_ExcuseDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="ExcuseDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO `StudentExcuses` (`StudentID`, `ExcuseID`, `ExcuseDate`) VALUES (?, ?, ?)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="StudentID" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="StudentID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="ExcuseID" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="ExcuseID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="ExcuseDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="ExcuseDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT StudentExcuseID, StudentID, ExcuseID, ExcuseDate FROM StudentExcuses</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE `StudentExcuses` SET `StudentID` = ?, `ExcuseID` = ?, `ExcuseDate` = ? WHERE ((`StudentExcuseID` = ?) AND ((? = 1 AND `StudentID` IS NULL) OR (`StudentID` = ?)) AND ((? = 1 AND `ExcuseID` IS NULL) OR (`ExcuseID` = ?)) AND ((? = 1 AND `ExcuseDate` IS NULL) OR (`ExcuseDate` = ?)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="StudentID" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="StudentID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="ExcuseID" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="ExcuseID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="ExcuseDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="ExcuseDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_StudentExcuseID" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="StudentExcuseID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_StudentID" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="StudentID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_StudentID" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="StudentID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_ExcuseID" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="ExcuseID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_ExcuseID" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="ExcuseID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_ExcuseDate" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="ExcuseDate" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="Original_ExcuseDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="ExcuseDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="StudentExcuseID" DataSetColumn="StudentExcuseID" />
              <Mapping SourceColumn="StudentID" DataSetColumn="StudentID" />
              <Mapping SourceColumn="ExcuseID" DataSetColumn="ExcuseID" />
              <Mapping SourceColumn="ExcuseDate" DataSetColumn="ExcuseDate" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="StudentInformationTableAdapter" GeneratorDataComponentClassName="StudentInformationTableAdapter" Name="StudentInformation" UserDataComponentName="StudentInformationTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="SummerTrainingDBConnectionString (Settings)" DbObjectName="StudentInformation" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM `StudentInformation` WHERE ((`StudentID` = ?) AND ((? = 1 AND `StudentName` IS NULL) OR (`StudentName` = ?)) AND ((? = 1 AND `DepartmentID` IS NULL) OR (`DepartmentID` = ?)) AND ((? = 1 AND `StartDate` IS NULL) OR (`StartDate` = ?)) AND ((? = 1 AND `EndDate` IS NULL) OR (`EndDate` = ?)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_StudentID" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="StudentID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_StudentName" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="StudentName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_StudentName" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="StudentName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_DepartmentID" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="DepartmentID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_DepartmentID" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="DepartmentID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_StartDate" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="StartDate" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="Original_StartDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="StartDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_EndDate" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="EndDate" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="Original_EndDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="EndDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO `StudentInformation` (`StudentID`, `StudentName`, `DepartmentID`, `StartDate`, `EndDate`) VALUES (?, ?, ?, ?, ?)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="StudentID" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="StudentID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="StudentName" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="StudentName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="DepartmentID" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="DepartmentID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="StartDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="StartDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="EndDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="EndDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT StudentID, StudentName, DepartmentID, StartDate, EndDate FROM StudentInformation</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE `StudentInformation` SET `StudentID` = ?, `StudentName` = ?, `DepartmentID` = ?, `StartDate` = ?, `EndDate` = ? WHERE ((`StudentID` = ?) AND ((? = 1 AND `StudentName` IS NULL) OR (`StudentName` = ?)) AND ((? = 1 AND `DepartmentID` IS NULL) OR (`DepartmentID` = ?)) AND ((? = 1 AND `StartDate` IS NULL) OR (`StartDate` = ?)) AND ((? = 1 AND `EndDate` IS NULL) OR (`EndDate` = ?)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="StudentID" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="StudentID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="StudentName" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="StudentName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="DepartmentID" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="DepartmentID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="StartDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="StartDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="EndDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="EndDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_StudentID" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="StudentID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_StudentName" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="StudentName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_StudentName" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="StudentName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_DepartmentID" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="DepartmentID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_DepartmentID" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="DepartmentID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_StartDate" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="StartDate" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="Original_StartDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="StartDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_EndDate" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="EndDate" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="Original_EndDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="EndDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="StudentID" DataSetColumn="StudentID" />
              <Mapping SourceColumn="StudentName" DataSetColumn="StudentName" />
              <Mapping SourceColumn="DepartmentID" DataSetColumn="DepartmentID" />
              <Mapping SourceColumn="StartDate" DataSetColumn="StartDate" />
              <Mapping SourceColumn="EndDate" DataSetColumn="EndDate" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="SummerTrainingDBDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_UserDSName="SummerTrainingDBDataSet" msprop:Generator_DataSetName="SummerTrainingDBDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="DepartmentInformation" msprop:Generator_RowEvHandlerName="DepartmentInformationRowChangeEventHandler" msprop:Generator_RowDeletedName="DepartmentInformationRowDeleted" msprop:Generator_RowDeletingName="DepartmentInformationRowDeleting" msprop:Generator_RowEvArgName="DepartmentInformationRowChangeEvent" msprop:Generator_TablePropName="DepartmentInformation" msprop:Generator_RowChangedName="DepartmentInformationRowChanged" msprop:Generator_RowChangingName="DepartmentInformationRowChanging" msprop:Generator_TableClassName="DepartmentInformationDataTable" msprop:Generator_RowClassName="DepartmentInformationRow" msprop:Generator_TableVarName="tableDepartmentInformation" msprop:Generator_UserTableName="DepartmentInformation">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="DepartmentID" msprop:Generator_ColumnPropNameInRow="DepartmentID" msprop:Generator_ColumnPropNameInTable="DepartmentIDColumn" msprop:Generator_ColumnVarNameInTable="columnDepartmentID" msprop:Generator_UserColumnName="DepartmentID" type="xs:int" />
              <xs:element name="DepartmentName" msprop:Generator_ColumnPropNameInRow="DepartmentName" msprop:Generator_ColumnPropNameInTable="DepartmentNameColumn" msprop:Generator_ColumnVarNameInTable="columnDepartmentName" msprop:Generator_UserColumnName="DepartmentName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Excuses" msprop:Generator_RowEvHandlerName="ExcusesRowChangeEventHandler" msprop:Generator_RowDeletedName="ExcusesRowDeleted" msprop:Generator_RowDeletingName="ExcusesRowDeleting" msprop:Generator_RowEvArgName="ExcusesRowChangeEvent" msprop:Generator_TablePropName="Excuses" msprop:Generator_RowChangedName="ExcusesRowChanged" msprop:Generator_RowChangingName="ExcusesRowChanging" msprop:Generator_TableClassName="ExcusesDataTable" msprop:Generator_RowClassName="ExcusesRow" msprop:Generator_TableVarName="tableExcuses" msprop:Generator_UserTableName="Excuses">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ExcuseID" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="ExcuseID" msprop:Generator_ColumnPropNameInTable="ExcuseIDColumn" msprop:Generator_ColumnVarNameInTable="columnExcuseID" msprop:Generator_UserColumnName="ExcuseID" type="xs:int" />
              <xs:element name="ExcuseDescription" msprop:Generator_ColumnPropNameInRow="ExcuseDescription" msprop:Generator_ColumnPropNameInTable="ExcuseDescriptionColumn" msprop:Generator_ColumnVarNameInTable="columnExcuseDescription" msprop:Generator_UserColumnName="ExcuseDescription" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="StudentExcuses" msprop:Generator_RowEvHandlerName="StudentExcusesRowChangeEventHandler" msprop:Generator_RowDeletedName="StudentExcusesRowDeleted" msprop:Generator_RowDeletingName="StudentExcusesRowDeleting" msprop:Generator_RowEvArgName="StudentExcusesRowChangeEvent" msprop:Generator_TablePropName="StudentExcuses" msprop:Generator_RowChangedName="StudentExcusesRowChanged" msprop:Generator_RowChangingName="StudentExcusesRowChanging" msprop:Generator_TableClassName="StudentExcusesDataTable" msprop:Generator_RowClassName="StudentExcusesRow" msprop:Generator_TableVarName="tableStudentExcuses" msprop:Generator_UserTableName="StudentExcuses">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="StudentExcuseID" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="StudentExcuseID" msprop:Generator_ColumnPropNameInTable="StudentExcuseIDColumn" msprop:Generator_ColumnVarNameInTable="columnStudentExcuseID" msprop:Generator_UserColumnName="StudentExcuseID" type="xs:int" />
              <xs:element name="StudentID" msprop:Generator_ColumnPropNameInRow="StudentID" msprop:Generator_ColumnPropNameInTable="StudentIDColumn" msprop:Generator_ColumnVarNameInTable="columnStudentID" msprop:Generator_UserColumnName="StudentID" type="xs:int" minOccurs="0" />
              <xs:element name="ExcuseID" msprop:Generator_ColumnPropNameInRow="ExcuseID" msprop:Generator_ColumnPropNameInTable="ExcuseIDColumn" msprop:Generator_ColumnVarNameInTable="columnExcuseID" msprop:Generator_UserColumnName="ExcuseID" type="xs:int" minOccurs="0" />
              <xs:element name="ExcuseDate" msprop:Generator_ColumnPropNameInRow="ExcuseDate" msprop:Generator_ColumnPropNameInTable="ExcuseDateColumn" msprop:Generator_ColumnVarNameInTable="columnExcuseDate" msprop:Generator_UserColumnName="ExcuseDate" type="xs:dateTime" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="StudentInformation" msprop:Generator_RowEvHandlerName="StudentInformationRowChangeEventHandler" msprop:Generator_RowDeletedName="StudentInformationRowDeleted" msprop:Generator_RowDeletingName="StudentInformationRowDeleting" msprop:Generator_RowEvArgName="StudentInformationRowChangeEvent" msprop:Generator_TablePropName="StudentInformation" msprop:Generator_RowChangedName="StudentInformationRowChanged" msprop:Generator_RowChangingName="StudentInformationRowChanging" msprop:Generator_TableClassName="StudentInformationDataTable" msprop:Generator_RowClassName="StudentInformationRow" msprop:Generator_TableVarName="tableStudentInformation" msprop:Generator_UserTableName="StudentInformation">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="StudentID" msprop:Generator_ColumnPropNameInRow="StudentID" msprop:Generator_ColumnPropNameInTable="StudentIDColumn" msprop:Generator_ColumnVarNameInTable="columnStudentID" msprop:Generator_UserColumnName="StudentID" type="xs:int" />
              <xs:element name="StudentName" msprop:Generator_ColumnPropNameInRow="StudentName" msprop:Generator_ColumnPropNameInTable="StudentNameColumn" msprop:Generator_ColumnVarNameInTable="columnStudentName" msprop:Generator_UserColumnName="StudentName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="DepartmentID" msprop:Generator_ColumnPropNameInRow="DepartmentID" msprop:Generator_ColumnPropNameInTable="DepartmentIDColumn" msprop:Generator_ColumnVarNameInTable="columnDepartmentID" msprop:Generator_UserColumnName="DepartmentID" type="xs:int" minOccurs="0" />
              <xs:element name="StartDate" msprop:Generator_ColumnPropNameInRow="StartDate" msprop:Generator_ColumnPropNameInTable="StartDateColumn" msprop:Generator_ColumnVarNameInTable="columnStartDate" msprop:Generator_UserColumnName="StartDate" type="xs:dateTime" minOccurs="0" />
              <xs:element name="EndDate" msprop:Generator_ColumnPropNameInRow="EndDate" msprop:Generator_ColumnPropNameInTable="EndDateColumn" msprop:Generator_ColumnVarNameInTable="columnEndDate" msprop:Generator_UserColumnName="EndDate" type="xs:dateTime" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:DepartmentInformation" />
      <xs:field xpath="mstns:DepartmentID" />
    </xs:unique>
    <xs:unique name="Excuses_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Excuses" />
      <xs:field xpath="mstns:ExcuseID" />
    </xs:unique>
    <xs:unique name="StudentExcuses_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:StudentExcuses" />
      <xs:field xpath="mstns:StudentExcuseID" />
    </xs:unique>
    <xs:unique name="StudentInformation_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:StudentInformation" />
      <xs:field xpath="mstns:StudentID" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="ExcusesStudentExcuses" msdata:parent="Excuses" msdata:child="StudentExcuses" msdata:parentkey="ExcuseID" msdata:childkey="ExcuseID" msprop:Generator_UserParentTable="Excuses" msprop:Generator_UserChildTable="StudentExcuses" msprop:Generator_RelationVarName="relationExcusesStudentExcuses" msprop:Generator_ChildPropName="GetStudentExcusesRows" msprop:Generator_ParentPropName="ExcusesRow" msprop:Generator_UserRelationName="ExcusesStudentExcuses" />
      <msdata:Relationship name="StudentInformationStudentExcuses" msdata:parent="StudentInformation" msdata:child="StudentExcuses" msdata:parentkey="StudentID" msdata:childkey="StudentID" msprop:Generator_UserParentTable="StudentInformation" msprop:Generator_UserChildTable="StudentExcuses" msprop:Generator_RelationVarName="relationStudentInformationStudentExcuses" msprop:Generator_UserRelationName="StudentInformationStudentExcuses" msprop:Generator_ChildPropName="GetStudentExcusesRows" msprop:Generator_ParentPropName="StudentInformationRow" />
      <msdata:Relationship name="DepartmentInformationStudentInformation" msdata:parent="DepartmentInformation" msdata:child="StudentInformation" msdata:parentkey="DepartmentID" msdata:childkey="DepartmentID" msprop:Generator_UserParentTable="DepartmentInformation" msprop:Generator_UserChildTable="StudentInformation" msprop:Generator_RelationVarName="relationDepartmentInformationStudentInformation" msprop:Generator_ChildPropName="GetStudentInformationRows" msprop:Generator_ParentPropName="DepartmentInformationRow" msprop:Generator_UserRelationName="DepartmentInformationStudentInformation" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>